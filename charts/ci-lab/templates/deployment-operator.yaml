apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}-operator
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ .Values.name }}-operator
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.name }}-operator
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.name }}-operator
    spec:
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccount: {{ .Values.name }}-sa
      volumes:
        - name: nginx-conf
          configMap:
            name: {{ .Values.name }}-web
        - name: rbac
          configMap:
            name: {{ .Values.name }}-rbac
            optional: true
      containers:        
        - name: operator
          image: {{ .Values.images.ci }}
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          envFrom:
            - configMapRef:
                name: {{ .Values.name }}-operator
          volumeMounts:
            - name: rbac
              mountPath: /rbac
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 15
        - name: redis
          image: {{ .Values.images.redis }}
          imagePullPolicy: Always
          ports:
            - containerPort: 6379
          readinessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 5
            periodSeconds: 15
        - name: web
          image: {{ .Values.images.web }}
          imagePullPolicy: Always
          command: ["/bin/sh", "-c"]
          args:
            - cp -L /nginx-conf/nginx-conf.conf /etc/nginx/conf.d/default.conf && nginx -g "daemon off;"
          ports:
            - containerPort: 80
          volumeMounts:
            - name: nginx-conf
              mountPath: /nginx-conf
        - name: ws
          image: {{ .Values.images.ws }}
          imagePullPolicy: Always
          ports:
            - containerPort: 3001
          envFrom:
            - configMapRef:
                name: {{ .Values.name }}-ws
        - name: cron
          image: {{ .Values.images.ci }}
          imagePullPolicy: Always
          command: ["/bin/sh", "-c"]
          args: ["while true; ./cron-ci;do sleep 10; done;"]
          env:
            - name: NAMESPACE
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.name }}-operator
                  key: NAMESPACE
            - name: GIT_IMAGE
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.name }}-operator
                  key: GIT_IMAGE
            - name: DEFAULT_IMAGE
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.name }}-operator
                  key: DEFAULT_IMAGE
            - name: JOB_BACKOFF_LIMIT
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.name }}-operator
                  key: JOB_BACKOFF_LIMIT
            - name: CI_OPERATOR_IMAGE
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.name }}-operator
                  key: CI_OPERATOR_IMAGE
            - name: CI_OPERATOR_NAME
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.name }}-operator
                  key: CI_OPERATOR_NAME
            - name: LOG_CONTAINER_NAME
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.name }}-operator
                  key: LOG_CONTAINER_NAME
            - name: LOG_TIME_SINCE
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.name }}-operator
                  key: LOG_TIME_SINCE
            - name: TZ
              value: Asia/Bangkok